{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","href","website","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","trim","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAKN,EAAMI,QAAQG,QACnB,mBAAGC,KAAI,UAAKR,EAAMI,QAAQK,SAA1B,SAAsCT,EAAMI,QAAQK,cCC/CC,EAAW,SAACV,GAAD,OACnB,qBAAKC,UAAU,YAAf,SACKD,EAAMW,SAASC,KAAI,SAACR,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCTnBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACId,UAAU,SACRe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCLG,G,wDAxCb,aAAe,IAAD,8BACZ,gBAUFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAR1D,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAad,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAET,SAAUkB,S,oBAIhC,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC5B,GAAD,OACvCA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYc,OAAOF,kBAGzD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEa,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAnCVK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92861410.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nimport \"./card.styles.css\"\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{ props.monster.email}</p>\r\n        <a href={`${props.monster.website}`}>{props.monster.website}</a>\r\n    </div>\r\n)","// importing all the dependencies that we need\r\nimport React from \"react\";\r\nimport \"./card-list.styles.css\"\r\nimport {Card} from \"../card/card.component\"\r\n\r\n//since we put the component Card to carea bout how th cards will look we have to import here so we can pass on the monsters\r\n// we give the component a name where the first letters ara CapitalLetters\r\n// adding the \"props\" meaning the properties/parameters for this component  and the cool thing is  we can add a child inside the component and we can call that by using props.children\r\n//when we add a component inside another one while we import that one , we have to render that too because we have to pass the properties we want\r\n\r\nexport const CardList = (props) => (\r\n     <div className=\"card-list\">\r\n         {props.monsters.map((monster) => (\r\n             <Card key={monster.id} monster={ monster}/>\r\n         ))}\r\n    </div>\r\n);\r\n \r\n\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className=\"search\"\r\n          type=\"search\"\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n)","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (e) => this.setState({ searchField: e.target.value });\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => {\n        this.setState({ monsters: users });\n      });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.trim().toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}